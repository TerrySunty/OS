#include<stdio.h>
#include<math.h>
#include<string.h>
#define max 20

void banker()
{
    int i,j,k=0,l,pro,res;
    char reply[3];
    bool ok;
    printf("enter the number of processes: \n");
    scanf("%d", &pro);
    printf("enter the number of resource: \n ");
    scanf("%d", &res);
    int allocat[pro][res],maximum[pro][res],available[res],need[pro][res],resource[res];
    int  newallocat[pro][res],newavailable[pro][res],flag[pro],seq[pro+1],check;
    for(i=0;i<res;i++)
    {
        resource[i]=0;
    }
     for(i=0;i<res;i++)
    {
        available[i]=0;
    }

    printf("enter the allocation matrix: ");
    for(i=0;i<pro;i++)
    {
        for(j=0;j<res;j++)
        {
            scanf("%d", &allocat[i][j]);
            //printf("%d", allocat[i][j]);
        }
        printf("\n");
    }


    printf("enter the maximum matrix: ");
    for(i=0;i<pro;i++)
    {
        for(j=0;j<res;j++)
        {
            scanf("%d", &maximum[i][j]);
            //printf("%d", maximum[i][j]);
        }
        printf("\n");
    }

    printf("enter the available matrix: ");
        for(j=0;j<res;j++)
        {
            scanf("%d", &available[j]);
        }
        // for(j=0;j<res;j++)
      //  {
            //printf("%d", available[j]);
       // }
        printf("\n");
        //resource calculate
            for(j=0;j<res;j++)
            {
                for(i=0;i<pro;i++)
                {
                    resource[j]=resource[j]+allocat[i][j];
                }
            }

            for(j=0;j<res;j++)
            {
                resource[j]=resource[j]+available[j];
            }
            printf("so our resource is: \n");

            for(j=0;j<res;j++)
            {
                printf("%d ", resource[j]);
            }
            printf("\n");

        int n,counter,process;

        for(i=0;i<pro;i++)
        {
            for(j=0;j<res;j++)
            {
                n = maximum[i][j] - allocat[i][j];
                need[i][j]=n;
            }
        }
        printf("the need matrix is: \n");
        for(i=0;i<pro;i++)
        {
            for(j=0;j<res;j++)
            {
                printf("%d", need[i][j]);
            }
            printf("\n");
        }

        counter=0;
        for(i=0;i<pro;i++)
        {
            for(j=0;j<res;j++)
            {
                 if(available[j]>=need[i][j])
                {
                    counter++;
                }
            }
                //printf("counter %d\n", counter);

              if(counter==res)
              {

                  for(j=0;j<res;j++)
                  {
                      available[j]=allocat[i][j]+available[j];
                  }

                  //printf("%d ", i);
                  k++;
                  seq[k]=i;

                 // for(j=0;j<res;j++)
                 // {
                      //printf("available %d", available[j]);
                  //}

              }

            else
            {
                flag[i]=1;

            }
             counter=0;
        }

        counter=0;
        ok=0;
        int change;

        while(ok!=1)
        {
        change=0;
        for(i=0;i<pro;i++)
        {
            if(flag[i]==1)
            {
              for(j=0;j<res;j++)
              {
                 if(available[j]>=need[i][j])
                 {
                    counter++;
                 }
              }

             if(counter==res)
              {
                  change=1;
                  for(j=0;j<res;j++)
                  {
                      available[j]=available[j]+allocat[i][j];
                  }
                 // for(j=0;j<res;j++)
               //   {
                    //  printf("available %d", available[j]);
                  //}

                  //flag[i]=0;
                 // printf(" %d", i);
                 k++;
                  seq[k]=i;
              }
              else
              {
                  flag[i]=1;
              }

            }
             counter=0;
        }
        printf("\n");
        //resource check
        check=0;
       for(i=0;i<3;i++)
       {
           if(available[i]==resource[i])
           {
               check++;
           }
       }
       //printf("check %d\n", check);

       if(check==3)
       {
           ok=1;
       }
       else
       {
           ok=0;
       }

         if(change==0)
           {
               break;
           }

    }
    if(ok==0)
    {
        printf("there may be deadlock\n");
    }
    else if(ok==1)
    {
        printf("it is safe state\n");
        printf("the safe sequence is : \n");
        printf("< ");
        for(i=1;i<=pro;i++)
        {
                printf("%d ", seq[i]);
        }
        printf(">");
    }

}




int main()
{
    banker();
}


// by Mushrit Shabnam :)
